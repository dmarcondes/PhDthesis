% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ucurve.R
\name{ucurve}
\alias{ucurve}
\title{U-curve algorithm on the Partition Lattice Learning Space}
\usage{
ucurve(
  xtrain,
  ytrain,
  xval,
  yval,
  X,
  Y,
  optimal = T,
  exhaust = 1000,
  sampleNeigh = F,
  increasing = F,
  earlystop = F,
  verbose = T,
  stop = 0,
  path = "~",
  Lh = NULL,
  cores = 4,
  save = F
)
}
\arguments{
\item{xtrain}{Vector with the training sample of x values.}

\item{ytrain}{Vector with the training sample of y values.}

\item{xval}{Vector with the validation sample of x values.}

\item{yval}{Vector with the validation sample of y values.}

\item{X}{Domain of variable x.}

\item{Y}{Domain of variable y.}

\item{optimal}{Logical indicating if the algorithm should return an optimal solution.}

\item{exhaust}{Number of points to exhaust before stopping the suboptimal algorithm.}

\item{sampleNeigh}{Either false to consider all neighboors, or the maximum number of neighboors to sample at each exhaustion. If a number, then optimal should be false.}

\item{increasing}{Logical indicating if target function is increasing.}

\item{earlystop}{Logical indicating if it should be possible to early stop the algorithm.}

\item{verbose}{Logical to print a trace of the algorithm.}

\item{stop}{Number of nodes yet to evaluate to trigger exhaustive search.}

\item{path}{Path to preprocessed partition files.}

\item{Lh}{A data frame with the partition lattice.}

\item{cores}{Number of cores for parallel computing.}

\item{save}{Logical. Whether to save the nodes exhausted.}
}
\value{
\item{hypotheses}{The estimated hypothesis of the global minimums with least VC dimension.}

\item{partitions}{Partitions of the global minimums with least VC dimension.}

\item{error}{Validation error of the global minimums.}

\item{exhausted}{Number of nodes exhausted during algorithm.}

\item{remain}{Number of nodes remaining after optimal algorithm stopped.}

\item{finished}{If the algorithm was finished or ended after not finding any Strong Local Minimum.}

\item{SLMvis}{Number of nodes exhausted until the last Strong Local Minimum was found.}

\item{remain_after_prune}{Number of nodes remaining after finding each Strong Local Minimum.}

\item{exhausted_until_prune}{Number of nodes exhausted until finding each Strong Local Minimum.}

\item{optimal}{Wheter an optimal solution was returned.}

\item{plot}{Plot with the error of each Strong Local Minimum.}
}
\description{
Optimal and suboptimal U-curve algorithm to perfom Model Selection on the Partition Lattice Learning Space.
}
\details{
The optimal U-curve algorithm works for at most 12 points in the domain, if the respetive fst file is available. The suboptimal algorithm in principle works for any number of points in the domain. The algorithm also performs a suboptimal search considering only increasing classifiers. More details about the algorithm may be found at the reference.
}
\examples{
set.seed(1)
x <- sample(x = c("01","02","03","04","05","06","07","08","09","10"),size = 50,replace = TRUE)
y <- as.factor(ifelse(as.numeric(x)-5+rnorm(50,0,5/3) > 0,1,0))
x <- factor(x)
train <- sample(1:50,35,FALSE)
xtrain <- x[train]
ytrain <- y[train]
xval <- x[!(c(1:50) \%in\% train)]
yval <- y[!(c(1:50) \%in\% train)]
u <- ucurve(xtrain,ytrain,xval,yval,
X = c("01","02","03","04","05","06","07","08","09","10"),Y = c(0,1),
optimal = FALSE,sampleNeigh = 5000,exhaust = 10,cores = 1)
}
